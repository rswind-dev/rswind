name: Publish Npm Packages

on:
  push:
    tags:
      # release(rust): v1.2.3 -> tag: rust-v1.2.3
      # release(node): v1.2.3 -> tag: node-v1.2.3
      - 'node-v*'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build bindings and node packages
    uses: ./.github/workflows/action-release-build.yml

  publish:
    name: Publish npm Packages
    runs-on: ubuntu-latest
    permissions:
      contents: write # for softprops/action-gh-release@v1
      id-token: write # for `npm publish --provenance`
    needs:
      - build
    steps:
      - uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v3

      - name: Install node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Download Binding Artifacts
        uses: actions/download-artifact@v4
        with:
          path: packages/rswind/artifacts

      - name: Create Npm Dirs
        run: pnpm --filter rswind create-npm-dirs

      - name: Move Binding Artifacts
        run: pnpm --filter rswind artifacts

      - name: Copy Licenses
        run: find ./packages/ -type d -maxdepth 1 -exec cp LICENSE {} \;

      - name: List Rswind Bindings
        run: ls -R ./packages/rswind/npm
        shell: bash

      - name: Download Node Artifacts
        uses: actions/download-artifact@v4
        with:
          path: packages/rswind/dist
          name: node-artifact

      - name: Download Wasm Binding
        uses: actions/download-artifact@v4
        with:
          path: packages/wasm-runtime/src/binding
          name: rswind-wasm

      - name: Build Rswind Packages
        run: pnpm --filter rswind --filter @rswind/wasm-runtime --filter @rswind/vite ci:build

      - name: Set Publishing Config
        run: pnpm config set '//registry.npmjs.org/:_authToken' "${NPM_TOKEN}"
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish Rswind Bindings (Dry Run)
        run: pnpm publish -r --filter '@rswind/binding-*' --tag latest --no-git-checks --ignore-scripts --dry-run
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish Rswind Bindings
        run: pnpm publish -r --filter '@rswind/binding-*' --tag latest --no-git-checks
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_CONFIG_PROVENANCE: true

      - name: Publish Rswind Packages (Dry Run)
        run: pnpm publish -r --filter rswind --filter @rswind/wasm-runtime --filter @rswind/vite --tag latest --no-git-checks  --dry-run
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_CONFIG_PROVENANCE: true

      - name: Publish Rswind Packages
        run: pnpm publish -r --filter rswind --filter @rswind/wasm-runtime --filter @rswind/vite --tag latest --no-git-checks
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_CONFIG_PROVENANCE: true
